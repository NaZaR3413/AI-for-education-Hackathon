{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nilay\\\\Downloads\\\\Side Projects\\\\AI-for-education-Hackathon\\\\frontend\\\\src\\\\pages\\\\home-files\\\\pdf-upload.js\";\nimport axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Pdf extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedFile: null,\n      textInput: '',\n      // Added state for the text input\n      isFormValid: false // Added state to track if the form is valid for submission\n    };\n    this.onFileChange = event => {\n      this.setState({\n        selectedFile: event.target.files[0]\n      }, this.validateForm);\n    };\n    this.onTextInputChange = event => {\n      this.setState({\n        textInput: event.target.value\n      }, this.validateForm);\n    };\n    // Function to validate the form\n    this.validateForm = () => {\n      const {\n        selectedFile,\n        textInput\n      } = this.state;\n      this.setState({\n        isFormValid: selectedFile !== null && textInput.trim() !== ''\n      });\n    };\n    this.onFileUpload = () => {\n      const formData = new FormData();\n      formData.append(\"myFile\", this.state.selectedFile, this.state.selectedFile.name);\n\n      // Append text input to the formData if you want to send them together\n      formData.append(\"textInput\", this.state.textInput);\n\n      // You can use a single API endpoint that handles both file and text input\n      axios.post(\"api/upload\", formData).then(response => {\n        console.log(\"File and text input uploaded successfully\");\n      }).catch(error => {\n        console.error(\"Error uploading file and text input:\", error);\n      });\n    };\n    // File content to be displayed after\n    // file upload is complete\n    this.fileData = () => {\n      if (this.state.selectedFile) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"File Details:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Name:\", \" \", this.state.selectedFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Type:\", \" \", this.state.selectedFile.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last Modified:\", \" \", this.state.selectedFile.lastModifiedDate.toDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 5\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Choose a file before Pressing the Upload button Please\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 5\n        }, this);\n      }\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Please upload your resume as a PDF and fill in your information!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: this.onFileChange,\n          accept: \"application/pdf\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: this.onTextInputChange,\n          placeholder: \"Enter your information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onFileUpload,\n          disabled: !this.state.isFormValid,\n          children: \"Upload!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), this.fileData()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Pdf;","map":{"version":3,"names":["axios","React","Component","jsxDEV","_jsxDEV","Pdf","constructor","args","state","selectedFile","textInput","isFormValid","onFileChange","event","setState","target","files","validateForm","onTextInputChange","value","trim","onFileUpload","formData","FormData","append","name","post","then","response","console","log","catch","error","fileData","children","fileName","_jsxFileName","lineNumber","columnNumber","type","lastModifiedDate","toDateString","render","onChange","accept","placeholder","onClick","disabled"],"sources":["C:/Users/nilay/Downloads/Side Projects/AI-for-education-Hackathon/frontend/src/pages/home-files/pdf-upload.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\n\r\nclass Pdf extends Component {\r\n  state = {\r\n    selectedFile: null,\r\n    textInput: '', // Added state for the text input\r\n    isFormValid: false, // Added state to track if the form is valid for submission\r\n  };\r\n\r\n  onFileChange = (event) => {\r\n    this.setState({\r\n      selectedFile: event.target.files[0],\r\n    }, this.validateForm);\r\n  };\r\n\r\n  onTextInputChange = (event) => {\r\n    this.setState({\r\n      textInput: event.target.value,\r\n    }, this.validateForm);\r\n  };\r\n\r\n  // Function to validate the form\r\n  validateForm = () => {\r\n    const { selectedFile, textInput } = this.state;\r\n    this.setState({\r\n      isFormValid: selectedFile !== null && textInput.trim() !== ''\r\n    });\r\n  };\r\n\r\n  onFileUpload = () => {\r\n    const formData = new FormData();\r\n    formData.append(\r\n      \"myFile\",\r\n      this.state.selectedFile,\r\n      this.state.selectedFile.name\r\n    );\r\n\r\n    // Append text input to the formData if you want to send them together\r\n    formData.append(\"textInput\", this.state.textInput);\r\n\r\n    // You can use a single API endpoint that handles both file and text input\r\n    axios.post(\"api/upload\", formData)\r\n      .then(response => {\r\n        console.log(\"File and text input uploaded successfully\");\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error uploading file and text input:\", error);\r\n      });\r\n  };\r\n\r\n// File content to be displayed after\r\n\t// file upload is complete\r\n    fileData = () => {\r\n\t\tif (this.state.selectedFile) {\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2>File Details:</h2>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tFile Name:{\" \"}\r\n\t\t\t\t\t\t{this.state.selectedFile.name}\r\n\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tFile Type:{\" \"}\r\n\t\t\t\t\t\t{this.state.selectedFile.type}\r\n\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tLast Modified:{\" \"}\r\n\t\t\t\t\t\t{this.state.selectedFile.lastModifiedDate.toDateString()}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<h4>\r\n\t\t\t\t\t\tChoose a file before Pressing the Upload\r\n\t\t\t\t\t\tbutton Please\r\n\t\t\t\t\t</h4>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Please upload your resume as a PDF and fill in your information!</h3>\r\n        <div>\r\n          <input type=\"file\" onChange={this.onFileChange} accept=\"application/pdf\"/>\r\n          <input type=\"text\" onChange={this.onTextInputChange} placeholder=\"Enter your information\"/>\r\n          <button onClick={this.onFileUpload} disabled={!this.state.isFormValid}>\r\n            Upload!\r\n          </button>\r\n        </div>\r\n        {this.fileData()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pdf;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,GAAG,SAASH,SAAS,CAAC;EAAAI,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAC1BC,KAAK,GAAG;MACNC,YAAY,EAAE,IAAI;MAClBC,SAAS,EAAE,EAAE;MAAE;MACfC,WAAW,EAAE,KAAK,CAAE;IACtB,CAAC;IAAA,KAEDC,YAAY,GAAIC,KAAK,IAAK;MACxB,IAAI,CAACC,QAAQ,CAAC;QACZL,YAAY,EAAEI,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC;MACpC,CAAC,EAAE,IAAI,CAACC,YAAY,CAAC;IACvB,CAAC;IAAA,KAEDC,iBAAiB,GAAIL,KAAK,IAAK;MAC7B,IAAI,CAACC,QAAQ,CAAC;QACZJ,SAAS,EAAEG,KAAK,CAACE,MAAM,CAACI;MAC1B,CAAC,EAAE,IAAI,CAACF,YAAY,CAAC;IACvB,CAAC;IAED;IAAA,KACAA,YAAY,GAAG,MAAM;MACnB,MAAM;QAAER,YAAY;QAAEC;MAAU,CAAC,GAAG,IAAI,CAACF,KAAK;MAC9C,IAAI,CAACM,QAAQ,CAAC;QACZH,WAAW,EAAEF,YAAY,KAAK,IAAI,IAAIC,SAAS,CAACU,IAAI,CAAC,CAAC,KAAK;MAC7D,CAAC,CAAC;IACJ,CAAC;IAAA,KAEDC,YAAY,GAAG,MAAM;MACnB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CACb,QAAQ,EACR,IAAI,CAAChB,KAAK,CAACC,YAAY,EACvB,IAAI,CAACD,KAAK,CAACC,YAAY,CAACgB,IAC1B,CAAC;;MAED;MACAH,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAE,IAAI,CAAChB,KAAK,CAACE,SAAS,CAAC;;MAElD;MACAV,KAAK,CAAC0B,IAAI,CAAC,YAAY,EAAEJ,QAAQ,CAAC,CAC/BK,IAAI,CAACC,QAAQ,IAAI;QAChBC,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;MAC1D,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACdH,OAAO,CAACG,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC9D,CAAC,CAAC;IACN,CAAC;IAEH;IACC;IAAA,KACGC,QAAQ,GAAG,MAAM;MACnB,IAAI,IAAI,CAACzB,KAAK,CAACC,YAAY,EAAE;QAC5B,oBACCL,OAAA;UAAA8B,QAAA,gBACC9B,OAAA;YAAA8B,QAAA,EAAI;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtBlC,OAAA;YAAA8B,QAAA,GAAG,YACQ,EAAC,GAAG,EACb,IAAI,CAAC1B,KAAK,CAACC,YAAY,CAACgB,IAAI;UAAA;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC,eAEJlC,OAAA;YAAA8B,QAAA,GAAG,YACQ,EAAC,GAAG,EACb,IAAI,CAAC1B,KAAK,CAACC,YAAY,CAAC8B,IAAI;UAAA;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC,eAEJlC,OAAA;YAAA8B,QAAA,GAAG,gBACY,EAAC,GAAG,EACjB,IAAI,CAAC1B,KAAK,CAACC,YAAY,CAAC+B,gBAAgB,CAACC,YAAY,CAAC,CAAC;UAAA;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAER,CAAC,MAAM;QACN,oBACClC,OAAA;UAAA8B,QAAA,gBACC9B,OAAA;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACNlC,OAAA;YAAA8B,QAAA,EAAI;UAGJ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAER;IACD,CAAC;EAAA;EAEAI,MAAMA,CAAA,EAAG;IACP,oBACEtC,OAAA;MAAA8B,QAAA,gBACE9B,OAAA;QAAA8B,QAAA,EAAI;MAAgE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzElC,OAAA;QAAA8B,QAAA,gBACE9B,OAAA;UAAOmC,IAAI,EAAC,MAAM;UAACI,QAAQ,EAAE,IAAI,CAAC/B,YAAa;UAACgC,MAAM,EAAC;QAAiB;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC1ElC,OAAA;UAAOmC,IAAI,EAAC,MAAM;UAACI,QAAQ,EAAE,IAAI,CAACzB,iBAAkB;UAAC2B,WAAW,EAAC;QAAwB;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC3FlC,OAAA;UAAQ0C,OAAO,EAAE,IAAI,CAACzB,YAAa;UAAC0B,QAAQ,EAAE,CAAC,IAAI,CAACvC,KAAK,CAACG,WAAY;UAAAuB,QAAA,EAAC;QAEvE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EACL,IAAI,CAACL,QAAQ,CAAC,CAAC;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC;EAEV;AACF;AAEA,eAAejC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}