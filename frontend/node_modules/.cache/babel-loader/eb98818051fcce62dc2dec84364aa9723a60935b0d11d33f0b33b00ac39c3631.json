{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\quadr\\\\Documents\\\\Shibi\\\\AIEducation\\\\AI-for-education-Hackathon\\\\frontend\\\\src\\\\pages\\\\results-files\\\\chart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Radar, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chart() {\n  _s();\n  const [numbers, setNumbers] = useState([]); // State to store the list of numbers\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/data') // Adjust the URL/port as needed\n    .then(response => {\n      setNumbers(response.data); // Set the fetched numbers to state\n    }).catch(error => {\n      console.error('There was an error fetching the data:', error);\n    });\n  }, []);\n\n  // Sample data for Chart\n  const data = [{\n    name: 'Overall Skills',\n    x: numbers[0] * 10\n  }, {\n    name: 'Experience Match',\n    x: numbers[1]\n  }, {\n    name: 'Impact Keywords',\n    x: numbers[2]\n  }, {\n    name: 'Job Responsibilities',\n    x: numbers[3]\n  }, {\n    name: 'Job Summary',\n    x: numbers[4]\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Data from Flask: \", numbers]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(RadarChart, {\n        height: 400,\n        width: 600,\n        outerRadius: \"80%\",\n        data: data,\n        children: [/*#__PURE__*/_jsxDEV(PolarGrid, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PolarAngleAxis, {\n          dataKey: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PolarRadiusAxis, {\n          angle: 0,\n          domain: [0, 100],\n          tick: {\n            fill: 'black'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Radar, {\n          name: \"Skills\",\n          dataKey: \"x\",\n          stroke: \"green\",\n          fill: \"green\",\n          fillOpacity: 0.6\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(Chart, \"NmavSJTOsQ6NXMSrAkWcN9okJRA=\");\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","useEffect","useState","axios","Radar","RadarChart","PolarGrid","PolarAngleAxis","PolarRadiusAxis","jsxDEV","_jsxDEV","Chart","_s","numbers","setNumbers","get","then","response","data","catch","error","console","name","x","children","fileName","_jsxFileName","lineNumber","columnNumber","height","width","outerRadius","dataKey","angle","domain","tick","fill","stroke","fillOpacity","_c","$RefreshReg$"],"sources":["C:/Users/quadr/Documents/Shibi/AIEducation/AI-for-education-Hackathon/frontend/src/pages/results-files/chart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Radar, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis } from 'recharts';\r\n\r\nfunction Chart() {\r\n    const [numbers, setNumbers] = useState([]); // State to store the list of numbers\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:5000/data') // Adjust the URL/port as needed\r\n            .then(response => {\r\n                setNumbers(response.data); // Set the fetched numbers to state\r\n            })\r\n            .catch(error => {\r\n                console.error('There was an error fetching the data:', error);\r\n            });\r\n    }, []);\r\n\r\n    // Sample data for Chart\r\n    const data = [\r\n        { name: 'Overall Skills', x: numbers[0] * 10 },\r\n        { name: 'Experience Match', x: numbers[1] },\r\n        { name: 'Impact Keywords', x: numbers[2] },\r\n        { name: 'Job Responsibilities', x: numbers[3] },\r\n        { name: 'Job Summary', x: numbers[4] },\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            <p>Data from Flask: {numbers}</p> {/* Display the message from Flask */}\r\n            <div>\r\n                <RadarChart height={400} width={600} \r\n                    outerRadius=\"80%\" data={data}>\r\n                    <PolarGrid />\r\n                    <PolarAngleAxis dataKey=\"name\" />\r\n                    <PolarRadiusAxis angle={0} domain={[0, 100]} tick={{ fill: 'black'}} />\r\n                    <Radar name=\"Skills\" dataKey=\"x\" stroke=\"green\"\r\n                    fill=\"green\" fillOpacity={0.6} />\r\n                </RadarChart>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}