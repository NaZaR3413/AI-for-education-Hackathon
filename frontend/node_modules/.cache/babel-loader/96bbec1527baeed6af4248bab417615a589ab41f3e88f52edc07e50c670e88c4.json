{"ast":null,"code":"var arrayEvery = require('./_arrayEvery'),\n  baseEvery = require('./_baseEvery'),\n  baseIteratee = require('./_baseIteratee'),\n  isArray = require('./isArray'),\n  isIterateeCall = require('./_isIterateeCall');\n\n/**\r\n * Checks if `predicate` returns truthy for **all** elements of `collection`.\r\n * Iteration is stopped once `predicate` returns falsey. The predicate is\r\n * invoked with three arguments: (value, index|key, collection).\r\n *\r\n * **Note:** This method returns `true` for\r\n * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\r\n * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\r\n * elements of empty collections.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Collection\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\r\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\r\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\r\n *  else `false`.\r\n * @example\r\n *\r\n * _.every([true, 1, null, 'yes'], Boolean);\r\n * // => false\r\n *\r\n * var users = [\r\n *   { 'user': 'barney', 'age': 36, 'active': false },\r\n *   { 'user': 'fred',   'age': 40, 'active': false }\r\n * ];\r\n *\r\n * // The `_.matches` iteratee shorthand.\r\n * _.every(users, { 'user': 'barney', 'active': false });\r\n * // => false\r\n *\r\n * // The `_.matchesProperty` iteratee shorthand.\r\n * _.every(users, ['active', false]);\r\n * // => true\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.every(users, 'active');\r\n * // => false\r\n */\nfunction every(collection, predicate, guard) {\n  var func = isArray(collection) ? arrayEvery : baseEvery;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\nmodule.exports = every;","map":{"version":3,"names":["arrayEvery","require","baseEvery","baseIteratee","isArray","isIterateeCall","every","collection","predicate","guard","func","undefined","module","exports"],"sources":["C:/Users/quadr/Documents/Shibi/AIEducation/AI-for-education-Hackathon/frontend/node_modules/lodash/every.js"],"sourcesContent":["var arrayEvery = require('./_arrayEvery'),\r\n    baseEvery = require('./_baseEvery'),\r\n    baseIteratee = require('./_baseIteratee'),\r\n    isArray = require('./isArray'),\r\n    isIterateeCall = require('./_isIterateeCall');\r\n\r\n/**\r\n * Checks if `predicate` returns truthy for **all** elements of `collection`.\r\n * Iteration is stopped once `predicate` returns falsey. The predicate is\r\n * invoked with three arguments: (value, index|key, collection).\r\n *\r\n * **Note:** This method returns `true` for\r\n * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\r\n * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\r\n * elements of empty collections.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Collection\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\r\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\r\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\r\n *  else `false`.\r\n * @example\r\n *\r\n * _.every([true, 1, null, 'yes'], Boolean);\r\n * // => false\r\n *\r\n * var users = [\r\n *   { 'user': 'barney', 'age': 36, 'active': false },\r\n *   { 'user': 'fred',   'age': 40, 'active': false }\r\n * ];\r\n *\r\n * // The `_.matches` iteratee shorthand.\r\n * _.every(users, { 'user': 'barney', 'active': false });\r\n * // => false\r\n *\r\n * // The `_.matchesProperty` iteratee shorthand.\r\n * _.every(users, ['active', false]);\r\n * // => true\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.every(users, 'active');\r\n * // => false\r\n */\r\nfunction every(collection, predicate, guard) {\r\n  var func = isArray(collection) ? arrayEvery : baseEvery;\r\n  if (guard && isIterateeCall(collection, predicate, guard)) {\r\n    predicate = undefined;\r\n  }\r\n  return func(collection, baseIteratee(predicate, 3));\r\n}\r\n\r\nmodule.exports = every;\r\n"],"mappings":"AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAC,eAAe,CAAC;EACrCC,SAAS,GAAGD,OAAO,CAAC,cAAc,CAAC;EACnCE,YAAY,GAAGF,OAAO,CAAC,iBAAiB,CAAC;EACzCG,OAAO,GAAGH,OAAO,CAAC,WAAW,CAAC;EAC9BI,cAAc,GAAGJ,OAAO,CAAC,mBAAmB,CAAC;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASK,KAAKA,CAACC,UAAU,EAAEC,SAAS,EAAEC,KAAK,EAAE;EAC3C,IAAIC,IAAI,GAAGN,OAAO,CAACG,UAAU,CAAC,GAAGP,UAAU,GAAGE,SAAS;EACvD,IAAIO,KAAK,IAAIJ,cAAc,CAACE,UAAU,EAAEC,SAAS,EAAEC,KAAK,CAAC,EAAE;IACzDD,SAAS,GAAGG,SAAS;EACvB;EACA,OAAOD,IAAI,CAACH,UAAU,EAAEJ,YAAY,CAACK,SAAS,EAAE,CAAC,CAAC,CAAC;AACrD;AAEAI,MAAM,CAACC,OAAO,GAAGP,KAAK","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}