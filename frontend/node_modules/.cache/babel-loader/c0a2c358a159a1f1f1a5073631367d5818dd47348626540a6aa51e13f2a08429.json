{"ast":null,"code":"import { InternSet } from \"internmap\";\nexport default function disjoint(values, other) {\n  const iterator = other[Symbol.iterator](),\n    set = new InternSet();\n  for (const v of values) {\n    if (set.has(v)) return false;\n    let value, done;\n    while (({\n      value,\n      done\n    } = iterator.next())) {\n      if (done) break;\n      if (Object.is(v, value)) return false;\n      set.add(value);\n    }\n  }\n  return true;\n}","map":{"version":3,"names":["InternSet","disjoint","values","other","iterator","Symbol","set","v","has","value","done","next","Object","is","add"],"sources":["C:/Users/quadr/Documents/Shibi/AIEducation/AI-for-education-Hackathon/frontend/node_modules/d3-array/src/disjoint.js"],"sourcesContent":["import {InternSet} from \"internmap\";\r\n\r\nexport default function disjoint(values, other) {\r\n  const iterator = other[Symbol.iterator](), set = new InternSet();\r\n  for (const v of values) {\r\n    if (set.has(v)) return false;\r\n    let value, done;\r\n    while (({value, done} = iterator.next())) {\r\n      if (done) break;\r\n      if (Object.is(v, value)) return false;\r\n      set.add(value);\r\n    }\r\n  }\r\n  return true;\r\n}\r\n"],"mappings":"AAAA,SAAQA,SAAS,QAAO,WAAW;AAEnC,eAAe,SAASC,QAAQA,CAACC,MAAM,EAAEC,KAAK,EAAE;EAC9C,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAACD,QAAQ,CAAC,CAAC,CAAC;IAAEE,GAAG,GAAG,IAAIN,SAAS,CAAC,CAAC;EAChE,KAAK,MAAMO,CAAC,IAAIL,MAAM,EAAE;IACtB,IAAII,GAAG,CAACE,GAAG,CAACD,CAAC,CAAC,EAAE,OAAO,KAAK;IAC5B,IAAIE,KAAK,EAAEC,IAAI;IACf,QAAQ;MAACD,KAAK;MAAEC;IAAI,CAAC,GAAGN,QAAQ,CAACO,IAAI,CAAC,CAAC,GAAG;MACxC,IAAID,IAAI,EAAE;MACV,IAAIE,MAAM,CAACC,EAAE,CAACN,CAAC,EAAEE,KAAK,CAAC,EAAE,OAAO,KAAK;MACrCH,GAAG,CAACQ,GAAG,CAACL,KAAK,CAAC;IAChB;EACF;EACA,OAAO,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}