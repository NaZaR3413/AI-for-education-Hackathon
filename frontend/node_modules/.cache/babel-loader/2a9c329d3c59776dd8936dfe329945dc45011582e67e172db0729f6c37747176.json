{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nilay\\\\Downloads\\\\Side Projects\\\\AI-for-education-Hackathon\\\\frontend\\\\src\\\\pages\\\\results-files\\\\chart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Radar, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chart() {\n  _s();\n  const [numbers, setNumbers] = useState([]); // State to store the list of numbers\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/data') // Adjust the URL/port as needed\n    .then(response => {\n      setNumbers(response.data); // Set the fetched numbers to state\n    }).catch(error => {\n      console.error('There was an error fetching the data:', error);\n    });\n  }, []);\n\n  // Sample data for Chart\n  const data = [{\n    name: 'Overall Skills',\n    x: numbers[0] * 20\n  }, {\n    name: 'Overall Experience',\n    x: numbers[1]\n  }, {\n    name: 'Impact Keywords',\n    x: numbers[2]\n  }, {\n    name: 'Job Responsibilites',\n    x: numbers[3]\n  }, {\n    name: 'Job Summary',\n    x: numbers[4]\n  }];\n  const resData = [{\n    name: 'Overall Skills',\n    x: 4 * 20\n  }, {\n    name: 'Overall Experience',\n    x: 77.39382051057605\n  }, {\n    name: 'Impact Keywords',\n    x: 70.55662101758571\n  }, {\n    name: 'Job Responsibilites',\n    x: 69.02663978818158\n  }, {\n    name: 'Job Summary',\n    x: 63.10514303296857\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-side\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-heading\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-display\",\n        children: [/*#__PURE__*/_jsxDEV(RadarChart, {\n          height: 300,\n          width: 500,\n          outerRadius: \"80%\",\n          data: data,\n          children: [/*#__PURE__*/_jsxDEV(PolarGrid, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(PolarAngleAxis, {\n            dataKey: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(PolarRadiusAxis, {\n            angle: 0,\n            domain: [0, 100],\n            tick: {\n              fill: 'black'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Radar, {\n            name: \"Skills\",\n            dataKey: \"x\",\n            stroke: \"green\",\n            fill: \"green\",\n            fillOpacity: 0.6\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"testing\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" Data from Flask: \", numbers[0]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"average-side\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avg-heading\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Projected Average Applicant's Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Data from Flask: \", numbers[0]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(Chart, \"NmavSJTOsQ6NXMSrAkWcN9okJRA=\");\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","useEffect","useState","axios","Radar","RadarChart","PolarGrid","PolarAngleAxis","PolarRadiusAxis","jsxDEV","_jsxDEV","Chart","_s","numbers","setNumbers","get","then","response","data","catch","error","console","name","x","resData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","height","width","outerRadius","dataKey","angle","domain","tick","fill","stroke","fillOpacity","_c","$RefreshReg$"],"sources":["C:/Users/nilay/Downloads/Side Projects/AI-for-education-Hackathon/frontend/src/pages/results-files/chart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Radar, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis } from 'recharts';\r\n\r\nfunction Chart() {\r\n    const [numbers, setNumbers] = useState([]); // State to store the list of numbers\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:5000/data') // Adjust the URL/port as needed\r\n            .then(response => {\r\n                setNumbers(response.data); // Set the fetched numbers to state\r\n            })\r\n            .catch(error => {\r\n                console.error('There was an error fetching the data:', error);\r\n            });\r\n    }, []);\r\n\r\n    // Sample data for Chart\r\n    const data = [\r\n        { name: 'Overall Skills', x: numbers[0] * 20 },\r\n        { name: 'Overall Experience', x: numbers[1] },\r\n        { name: 'Impact Keywords', x: numbers[2] },\r\n        { name: 'Job Responsibilites', x: numbers[3] },\r\n        { name: 'Job Summary', x: numbers[4] },\r\n    ];\r\n\r\n    const resData = [ \r\n        { name: 'Overall Skills', x: 4 * 20},\r\n        { name: 'Overall Experience', x: 77.39382051057605 },\r\n        { name: 'Impact Keywords', x: 70.55662101758571 },\r\n        { name: 'Job Responsibilites', x: 69.02663978818158 },\r\n        { name: 'Job Summary', x: 63.10514303296857 },\r\n    ];\r\n\r\n    return (\r\n        <div className=\"results-page-container\">\r\n            <div className='user-side'>\r\n                <div className='user-heading'>\r\n                    <p>Your Results</p>\r\n                </div>\r\n                <div className=\"chart-display\">\r\n                    <RadarChart height={300} width={500} \r\n                        outerRadius=\"80%\" data={data}>\r\n                        <PolarGrid />\r\n                        <PolarAngleAxis dataKey=\"name\" />\r\n                        <PolarRadiusAxis angle={0} domain={[0, 100]} tick={{ fill: 'black'}} />\r\n                        <Radar name=\"Skills\" dataKey=\"x\" stroke=\"green\"\r\n                        fill=\"green\" fillOpacity={0.6} />\r\n                    </RadarChart>\r\n                    <div className='testing'>\r\n                        <p> Data from Flask: {numbers[0]}</p>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className='average-side'>\r\n                <div className='avg-heading'>\r\n                    <p>Projected Average Applicant's Results</p>\r\n\r\n                </div>\r\n                <p>\r\n                    Data from Flask: {numbers[0]}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}